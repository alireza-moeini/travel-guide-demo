openapi: 3.0.3
info:
  title: REST APIs using Flask, OpenAPI and Connexion
  description: REST APIs using Flask, OpenAPI and Connexion
  version: "1.0.0"
servers:
  - url: http://localhost:5000
    description: Rest Server showing Swagger and Connexion capability
paths:
  /hotel:
    get:
      operationId: app.main.views.hotel.get_hotels
      tags:
        - Hotel
      summary: Retrieve a list of all available hotels
      description: Retrieve a list of all available hotels
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            example: 50
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
            example: 20
          description: The numbers of items to return
      responses:
        "200": # status code
          description: Return a list of all available hotels
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Hotel"
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
    post:
      operationId: app.main.views.hotel.find_hotels
      tags:
        - Hotel
      summary: Returns a list of hotels based on certain filters.
      description: Returns a list of hotels based on certain filters.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [ cities ]
              properties:
                cities:
                  type: array
                  items:
                    type: string
                  description: A list of IATA codes representing the cities where the hotels reside
                ratings:
                  type: array
                  items:
                    type: integer
                  description: A list of ratings for the hotels
                name:
                  type: string
                  description: Partial or complete name of the hotel. Used for case insensitive, partial or complete search
            example:
              cities: [ NYC ]
              ratings: [ 1, 2, 3, 4, 5 ]
              name: best west
      responses:
        "200": # status code
          description: Return the entire list of hotels.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Hotel"
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
  /hotel/search:
    get:
      operationId: app.main.views.hotel.search_hotels
      tags:
        - Hotel
      summary: Returns a list of hotels based on certain filters.
      description: Returns a list of hotels based on certain filters.
      parameters:
        - in: query
          name: cities
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
            example: [ NYC, PAR ]
          description: The cities where the hotels reside.
        - in: query
          name: ratings
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
            example: [ 3, 4, 5 ]
          description: The ratings assigned to the hotels.
        - in: query
          name: name
          schema:
            type: string
          description: Partial or complete name of the hotel. The search is case insensitive.

      responses:
        "200": # status code
          description: Return the entire list of hotels.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Hotel"
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
  /hotel/{hotel_id}:
    get:
      operationId: app.main.views.hotel.get_hotel
      tags:
        - Hotel
      summary: Return a hotel with given ID
      description: Return a hotel with given ID
      parameters:
        - name: hotel_id
          in: path
          description: Hotel ID
          required: true
          schema:
            type: string
            example: ILBUHG36
      responses:
        "200": # status code
          description: Return an Item with given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hotel"
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
  /hotel/offer:
    get:
      operationId: app.main.views.hotel.get_hotel_offers
      tags:
        - Hotel
      summary: Get a list of hotel offers based on search criteria
      description: Get a list of hotel offers based on search criteria
      parameters:
        - $ref: "#/components/parameters/dest"
        - $ref: "#/components/parameters/adults"
        - $ref: "#/components/parameters/checkInDate"
        - $ref: "#/components/parameters/checkOutDate"
        - $ref: "#/components/parameters/roomQuantity"
        - $ref: "#/components/parameters/hotelPriceRange"
        - $ref: "#/components/parameters/currency"
        - $ref: "#/components/parameters/hotelBoardType"
        - $ref: "#/components/parameters/hotelBestRateOnly"

      responses:
        "200": # status code
          description: Return a list of hotel offers based on search criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Hotel"
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
  /flight:
    get:
      operationId: app.main.views.flight.search_flights
      tags:
        - Flight
      summary: Retrieve a list of available flights
      description: Retrieve a list of available flights
      parameters:
        - $ref: '#/components/parameters/origin'
        - $ref: '#/components/parameters/dest'
        - $ref: '#/components/parameters/departureDate'
        - $ref: '#/components/parameters/returnDate'
        - $ref: '#/components/parameters/adults'
        - $ref: '#/components/parameters/travelClass'
        - $ref: '#/components/parameters/nonStop'
        - $ref: '#/components/parameters/maxPrice'
      responses:
        "200": # status code
          description: Return a list of available flights with specified search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Flight"
        "400":
          $ref: '#/components/responses/BadRequest'
  /travel:
    get:
      operationId: app.main.views.travel.search_travels
      tags:
        - Travel
      summary: Retrieve a list of available travel possibilities
      description: Retrieve a list of available travel possibilities
      parameters:
        - $ref: '#/components/parameters/origin'
        - $ref: "#/components/parameters/dest"
        - $ref: "#/components/parameters/adults"
        - $ref: "#/components/parameters/checkInDate"
        - $ref: "#/components/parameters/checkOutDate"
        - $ref: "#/components/parameters/roomQuantity"
        - $ref: "#/components/parameters/hotelPriceRange"
        - $ref: "#/components/parameters/currency"
        - $ref: "#/components/parameters/hotelBoardType"
        - $ref: "#/components/parameters/hotelBestRateOnly"
        - $ref: '#/components/parameters/departureDate'
        - $ref: '#/components/parameters/returnDate'
        - $ref: '#/components/parameters/travelClass'
        - $ref: '#/components/parameters/nonStop'
        - $ref: '#/components/parameters/maxPrice'
      responses:
        "200": # status code
          description: Return a list of available flights with specified search criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelOffer'
        "400":
          $ref: '#/components/responses/BadRequest'


components:
  parameters:
    origin:
      in: query
      name: origin
      schema:
        type: string
        example: NYC
      required: true
      description: city/airport IATA code from which the traveler will depart, e.g. BOS for Boston
    dest:
      in: query
      name: dest
      schema:
        type: string
        example: PAR
      required: true
      description: city/airport IATA code to which the traveler is going, e.g. BOS for Boston
    departureDate:
      in: query
      name: departureDate
      schema:
        type: string
        example: "2023-04-19"
        format: date
      required: true
      description: the date on which the traveler will depart from the origin to go to the destination. Dates are specified in the ISO 8601 YYYY-MM-DD format, e.g. 2017-12-25
    returnDate:
      in: query
      name: returnDate
      schema:
        type: string
        format: date
      description: the date on which the traveler will depart from the destination to return to the origin. If this parameter is not specified, only one-way itineraries are found. If this parameter is specified, only round-trip itineraries are found. Dates are specified in the ISO 8601 YYYY-MM-DD format, e.g. 2018-02-28
    adults:
      in: query
      name: adults
      schema:
        type: integer
        minimum: 1
        maximum: 9
        example: 1
        default: 1
      required: true
      description: the number of adult travelers (age 12 or older on date of departure).
    travelClass:
      in: query
      name: class
      schema:
        type: string
        enum: [ ECONOMY, PREMIUM_ECONOMY, BUSINESS, FIRST ]
      description: Travel class for the flight.
    nonStop:
      in: query
      name: nonStop
      schema:
        type: boolean
        default: false
      description: if set to true, the search will find only flights going from the origin to the destination with no stop in between
    maxPrice:
      in: query
      name: maxPrice
      schema:
        type: integer
        format: int32
      description: maximum price per traveler. By default, no limit is applied. If specified, the value should be a positive number with no decimals
    checkInDate:
      in: query
      name: checkInDate
      schema:
        type: string
        example: "2023-04-20"
        format: date
      description: Check-in date of the stay (hotel local date). Format YYYY-MM-DD. The lowest accepted value is the present date (no dates in the past). If not present, the default value will be today's date in the GMT time zone.
    checkOutDate:
      in: query
      name: checkOutDate
      schema:
        $ref: '#/components/schemas/Date'
      description: Check-out date of the stay (hotel local date). Format YYYY-MM-DD. The lowest accepted value is checkInDate+1. If not present, it will default to checkInDate +1.
    roomQuantity:
      in: query
      name: roomQuantity
      schema:
        type: integer
        minimum: 1
        maximum: 9
        default: 1
      description: Number of rooms requested (1-9).
    currency:
      in: query
      name: currency
      schema:
        type: string
      description: >
        Use this parameter to request a specific currency.
        If a hotel does not support the requested currency, the prices for the hotel will be returned in the local currency of the hotel.
    hotelPriceRange:
      in: query
      name: hotelPriceRange
      schema:
        type: string
      description: >
        Filter hotel offers by price per night interval (ex: 200-300 or -300 or 100).
        It is mandatory to include a currency when this field is set.
    hotelBoardType:
      in: query
      name: hotelBoardType
      schema:
        type: string
        enum: [ ROOM_ONLY, BREAKFAST, HALF_BOARD, FULL_BOARD, ALL_INCLUSIVE ]
      description: Filter response based on available meals
    hotelBestRateOnly:
      in: query
      name: hotelBestRateOnly
      schema:
        type: boolean
        default: true
      description: Used to return only the cheapest offer per hotel or all available offers.

  responses:
    BadRequest:
      description: The request is not valid. This could be bcause of insufficient or wrongs parameters provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Date:
      type: string
      format: date
    GeoCode:
      type: object
      properties:
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
    Address:
      type: object
      properties:
        country_code:
          type: string
        housenumber:
          type: string
        street:
          type: string
        country:
          type: string
        county:
          type: string
        district:
          type: string
        city:
          type: string
        address_line1:
          type: string
        address_line2:
          type: string

    Hotel:
      type: object
      properties:
        hotelId:
          type: integer
          format: int64
        chainCode:
          type: string
        iataCode:
          type: string
        address:
          $ref: "#/components/schemas/Address"
        name:
          type: string
        rating:
          type: integer
        geoCode:
          $ref: "#/components/schemas/GeoCode"
    Flight:
      type: object
      properties:
        id:
          type: integer
          format: int64
        source:
          type: string
        instantTicketingRequired:
          type: boolean
        disablePricing:
          type: boolean
        nonHomogeneous:
          type: boolean
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    TravelOffer:
      type: object
      properties:
        hotels:
          type: array
          items:
            $ref: "#/components/schemas/Hotel"
        flights:
          type: array
          items:
            $ref: "#/components/schemas/Flight"